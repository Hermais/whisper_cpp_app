name: Build Flutter App

on:
  push:
    # This workflow now runs ONLY when you push a tag like v1.0.0, v1.2.5, etc.
    tags:
      - 'v*'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Build and Sign APK
        run: flutter build apk --release --flavor prod
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}

      - name: Build and Sign App Bundle
        run: flutter build appbundle --release --flavor prod
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}

      # The two 'upload-artifact' steps have been removed and replaced with the step below.
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # This creates a release with the same name as the tag you pushed
          tag_name: ${{ github.ref_name }}
          # This sets the title of the release
          name: Release ${{ github.ref_name }}
          # This attaches both your APK and AAB files to the release
          files: |
            build/app/outputs/flutter-apk/app-prod-release.apk
            build/app/outputs/bundle/prodRelease/app-prod-release.aab